server {
  # Ports to listen on
  listen 80;
  listen [::]:80;

  # Server name to listen for
  server_name localhost;

  # Path to document root
  root /var/www/html;

  # File to be used as index
  index index.php;

  # Overrides logs defined in nginx.conf, allows per site logs.
  error_log  /var/log/nginx/error.log;
  access_log /var/log/nginx/access.log;

  # Generic security enhancements. Use https://securityheaders.io to test
  # and recommend further improvements.

  # Hide Nginx version in error messages and reponse headers.
  server_tokens off;

  # Don't allow pages to be rendered in an iframe on external domains.
  add_header X-Frame-Options "SAMEORIGIN" always;

  # MIME sniffing prevention
  add_header X-Content-Type-Options "nosniff" always;

  # Enable cross-site scripting filter in supported browsers.
  add_header X-Xss-Protection "1; mode=block" always;

  # Don't cache appcache, document html and data.
  location ~* \.(?:manifest|appcache|html?|xml|json)$ {
    add_header Cache-Control "max-age=0";
  }

  # Cache RSS and Atom feeds.
  location ~* \.(?:rss|atom)$ {
    add_header Cache-Control "max-age=3600";
  }

  # Caches images, icons, video, audio, HTC, etc.
  location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|mp4|ogg|ogv|webm|htc)$ {
    add_header Cache-Control "max-age=31536000";
    access_log off;
  }

  # Cache svgz files, but don't compress them.
  location ~* \.svgz$ {
    add_header Cache-Control "max-age=31536000";
    access_log off;
    gzip off;
  }

  # Cache CSS and JavaScript.
  location ~* \.(?:css|js)$ {
    add_header Cache-Control "max-age=31536000";
    access_log off;
  }

  # Cache WebFonts.
  location ~* \.(?:ttf|ttc|otf|eot|woff|woff2)$ {
    add_header Cache-Control "max-age=31536000";
    access_log off;
  }

  # Don't record access/error logs for robots.txt.
  location = /robots.txt {
    access_log off;
    log_not_found off;
  }

  # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
  # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
  location ~ /\. {
    deny all;
  }

  # Deny access to any files with a .php extension in the uploads directory
  # Works in sub-directory installs and also in multisite network
  # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
  location ~* /(?:uploads|files)/.*\.php$ {
    deny all;
  }

  location / {
    try_files $uri $uri/ /index.php?$args;
  }

  location ~ \.php$ {
    try_files $uri =404;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    include /etc/nginx/fastcgi_params;
    fastcgi_pass phpfpm:9000;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
  }

  # Rewrite robots.txt
  rewrite ^/robots.txt$ /index.php last;
}
